C * ! / b0  * * c=> * cv1_xreal_0 b0 * ! / b1  * * c=> * * cm1_subset_1 b1 ck5_numbers * * c=> * c~ * cv1_abian b1 * * c= * * ck1_power b1 b0 * ck4_xcmplx_0 * * ck1_power b1 * ck4_xcmplx_0 b0 
+ * ! / b0  * * c=> * cv1_xreal_0 b0 * cv1_xcmplx_0 b0 
+ * ! / b0  * * c=> * * cm1_subset_1 b0 ck4_ordinal1 * cv7_ordinal1 b0 
+ * ! / b0  * ! / b1  * * c=> * * c& * cv7_ordinal1 b0 * cv1_xreal_0 b1 * cv1_xreal_0 * * ck1_power b0 b1 
+ * ! / b0  * * c=> * cv1_xreal_0 b0 * * c& * cv1_xcmplx_0 * ck4_xcmplx_0 b0 * cv1_xreal_0 * ck4_xcmplx_0 b0 
+ * ! / b0  * * c=> * cv1_xcmplx_0 b0 * * c= * ck4_xcmplx_0 * ck4_xcmplx_0 b0 b0 
+ * * c= ck5_numbers ck4_ordinal1 
+ * ! / b0  * * c=> * cv1_xreal_0 b0 * ! / b1  * * c=> * * cm1_subset_1 b1 ck5_numbers * * c=> * c~ * cv1_abian b1 * * c= * * ck1_newton * ck4_xcmplx_0 b0 b1 * ck4_xcmplx_0 * * ck1_newton b0 b1 
+ * ! / b0  * * c=> * cv1_xreal_0 b0 * ! / b1  * * c=> * cv7_ordinal1 b1 * * c=> * c~ * * c& * c~ * * c& * * cr1_xxreal_0 c1 b1 * * cr1_xxreal_0 ck6_numbers b0 * cv1_abian b1 * * c& * * c= * * ck1_newton * * ck1_power b1 b0 b1 b0 * * c= * * ck1_power b1 * * ck1_newton b0 b1 b0 
- * ! / b0  * * c=> * cv7_ordinal1 b0 * ! / b1  * * c=> * cv1_xreal_0 b1 * * c& * * c=> * * c& * * cr1_xxreal_0 ck6_numbers b1 * * cr1_xxreal_0 c1 b0 * * c= * * ck1_power b0 b1 * * ck2_prepower b0 b1 * c~ * * c& * c~ * * cr1_xxreal_0 ck6_numbers b1 * * c& * c~ * cv1_abian b0 * c~ * * c= * * ck1_power b0 b1 * ck4_xcmplx_0 * * ck2_prepower b0 * ck4_xcmplx_0 b1 
- * ! / b0  * * c=> * cv1_xreal_0 b0 * * c= * * ck1_power c1 b0 b0 
- * ! / b0  * ! / b1  * * c=> * * c& * cv7_ordinal1 b0 * * cm1_subset_1 b1 ck1_numbers * * c= * * ck2_power b0 b1 * * ck1_power b0 b1 
- * ! / b0  * * c=> * cv1_xreal_0 b0 * ! / b1  * * c=> * * cm1_subset_1 b1 ck5_numbers * * c=> * * c& * * cr1_xxreal_0 ck6_numbers b0 * * cr1_xxreal_0 c1 b1 * * cr1_xxreal_0 ck6_numbers * * ck1_power b1 b0 
- * ! / b0  * ! / b1  * * c=> * * c& * cv1_xxreal_0 b0 * cv1_xxreal_0 b1 * * c| * * cr1_xxreal_0 b0 b1 * * cr1_xxreal_0 b1 b0 
- * ! / b0  * * c=> * cv1_xreal_0 b0 * cv1_xxreal_0 b0 
- * * c= ck6_numbers ck1_xboole_0 
- * ! / b0  * * c=> * cv1_xboole_0 b0 * * c= b0 ck1_xboole_0 
