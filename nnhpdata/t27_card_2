C * ! / b0  * * c=> * cv1_card_1 b0 * * c& * * c= * * ck3_card_2 b0 c1 b0 * * c= * * ck3_card_2 c1 b0 c1 
+ * ! / b0  * ! / b1  * * c=> * cv1_card_1 b1 * * c<=> * * c= b1 * ck1_card_1 b0 * * cr2_wellord2 b0 b1 
+ * ! / b0  * * c=> * cv1_card_1 b0 * ! / b1  * * c=> * cv1_card_1 b1 * * c= * * ck3_card_2 b0 b1 * ck1_card_1 * * ck1_funct_2 b1 b0 
+ * ! / b0  * cv1_card_1 * ck1_card_1 b0 
+ * ! / b0  * ! / b1  * * c& * cv1_funct_1 * * ck7_funcop_1 b0 b1 * * c& * * * cv1_funct_2 * * ck7_funcop_1 b0 b1 b0 * ck1_tarski b1 * * cm1_subset_1 * * ck7_funcop_1 b0 b1 * ck1_zfmisc_1 * * ck2_zfmisc_1 b0 * ck1_tarski b1 
+ * ! / b0  * c~ * cv1_xboole_0 * ck1_zfmisc_1 b0 
+ * ! / b0  * ! / b1  * * c=> * * c& * c~ * cv1_xboole_0 b0 * * cm1_subset_1 b1 b0 * * c= * * ck6_domain_1 b0 b1 * ck1_tarski b1 
+ * ! / b0  * ! / b1  * * c=> * c~ * cv1_xboole_0 b1 * * c= * * ck9_funct_2 b0 b1 * * ck1_funct_2 b0 b1 
+ * ! / b0  * ! / b1  * * cr2_wellord2 b0 b0 
+ * c~ * cv1_xboole_0 c1 
+ * * c= c1 * ck1_tarski ck1_xboole_0 
+ * ! / b0  * * c= * ck1_card_1 * ck1_tarski b0 c1 
+ * ! / b0  * ! / b1  * * c& * * cr2_wellord2 b0 * * ck1_funct_2 * ck1_tarski b1 b0 * * c= * ck1_card_1 b0 * ck1_card_1 * * ck1_funct_2 * ck1_tarski b1 b0 
+ * ! / b0  * ! / b1  * * c= * * ck9_funct_2 b0 * ck1_tarski b1 * * ck6_domain_1 * ck1_zfmisc_1 * * ck2_zfmisc_1 b0 * ck1_tarski b1 * * ck7_funcop_1 b0 b1 
- * ! / b0  * * c=> * cv1_card_1 b0 * * c= * * ck3_card_2 b0 ck6_numbers c1 
- * ! / b0  * * c=> * cv1_card_1 b0 * * c=> * c~ * * c= b0 ck6_numbers * * c= * * ck3_card_2 ck6_numbers b0 ck6_numbers 
- * cv1_xboole_0 co_0_0_xboole_0 
- * * c= ck1_xboole_0 co_0_0_xboole_0 
- * * c= ck6_numbers ck1_xboole_0 
- * ! / b0  * ! / b1  * * c=> * * c& * cv1_card_1 b0 * cv1_card_1 b1 * cv1_card_1 * * ck3_card_2 b0 b1 
- * ! / b0  * * c=> * cv1_xboole_0 b0 * cv1_card_1 b0 
- * ! / b0  * * c= * * ck1_funct_2 ck1_xboole_0 b0 * ck1_tarski ck1_xboole_0 
- * ! / b0  * * c=> * cv1_xboole_0 b0 * * c= b0 ck1_xboole_0 
- * ! / b0  * ! / b1  * * c=> * * c& * c~ * cv1_xboole_0 b0 * cv1_xboole_0 b1 * cv1_xboole_0 * * ck1_funct_2 b0 b1 
- * ! / b0  * * c=> * cv1_xboole_0 b0 * * c& * cv1_xboole_0 * ck1_card_1 b0 * cv1_card_1 * ck1_card_1 b0 
- * ! / b0  * * c=> * cv1_card_1 b0 * cv3_ordinal1 b0 
- * ! / b0  * * c<=> * cv1_card_1 b0 * c? / b1  * * c& * cv3_ordinal1 b1 * * c& * * c= b0 b1 * ! / b2  * * c=> * cv3_ordinal1 b2 * * c=> * * cr2_wellord2 b2 b1 * * cr1_ordinal1 b1 b2 
