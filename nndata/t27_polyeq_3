C fof(t27_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (k1_newton(A, 3)=k5_binop_2(k5_binop_2(A, A), A) &  (k1_newton(A, 3)=k5_binop_2(k1_polyeq_3(A), A) & k1_newton(A, 3)=k3_polyeq_3(A)) ) ) ) ).
+ fof(redefinition_k5_numbers, axiom, k5_numbers=k4_ordinal1).
+ fof(spc2_numerals, axiom,  ( (v2_xxreal_0(2) & m2_subset_1(2, k1_numbers, k5_numbers))  &  (m1_subset_1(2, k5_numbers) & m1_subset_1(2, k1_numbers)) ) ).
+ fof(redefinition_k1_nat_1, axiom,  (! [A, B] :  ( (v7_ordinal1(A) & m1_subset_1(B, k5_numbers))  => k1_nat_1(A, B)=k2_xcmplx_0(A, B)) ) ).
+ fof(cc17_membered, axiom,  (! [A] :  (v6_membered(A) =>  (! [B] :  (m1_subset_1(B, A) => v7_ordinal1(B)) ) ) ) ).
+ fof(t6_newton, axiom,  (! [A] :  (v7_ordinal1(A) =>  (! [B] :  (v1_xcmplx_0(B) => k1_newton(B, k1_nat_1(A, 1))=k3_xcmplx_0(k1_newton(B, A), B)) ) ) ) ).
+ fof(redefinition_k5_binop_2, axiom,  (! [A, B] :  ( (v1_xcmplx_0(A) & v1_xcmplx_0(B))  => k5_binop_2(A, B)=k3_xcmplx_0(A, B)) ) ).
+ fof(fc1_square_1, axiom,  (! [A] :  (v1_xcmplx_0(A) => v1_xcmplx_0(k3_square_1(A))) ) ).
+ fof(d1_square_1, axiom,  (! [A] :  (v1_xcmplx_0(A) => k3_square_1(A)=k3_xcmplx_0(A, A)) ) ).
+ fof(rqRealAdd__k2_xcmplx_0__r1_r1_r2, axiom, k2_xcmplx_0(1, 1)=2).
+ fof(cc3_xcmplx_0, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) => v1_xcmplx_0(A)) ) ).
+ fof(fc6_membered, axiom, v6_membered(k4_ordinal1)).
+ fof(spc1_numerals, axiom,  ( (v2_xxreal_0(1) & m2_subset_1(1, k1_numbers, k5_numbers))  &  (m1_subset_1(1, k5_numbers) & m1_subset_1(1, k1_numbers)) ) ).
+ fof(redefinition_k1_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) => k1_polyeq_3(A)=k3_square_1(A)) ) ).
+ fof(commutativity_k1_nat_1, axiom,  (! [A, B] :  ( (v7_ordinal1(A) & m1_subset_1(B, k5_numbers))  => k1_nat_1(A, B)=k1_nat_1(B, A)) ) ).
+ fof(rqRealAdd__k2_xcmplx_0__r1_r2_r3, axiom, k2_xcmplx_0(1, 2)=3).
+ fof(t5_newton, axiom,  (! [A] :  (v1_xcmplx_0(A) => k1_newton(A, 1)=A) ) ).
+ fof(d2_polyeq_3, axiom,  (! [A] :  (v1_xcmplx_0(A) => k3_polyeq_3(A)=k5_binop_2(k3_square_1(A), A)) ) ).
- fof(t22_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  ~ ( (k1_polyeq_3(A)=B &  ( ~ (r1_xxreal_0(k6_numbers, k4_complex1(B)))  &  ( ~ (A=k3_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k5_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k7_complex1)))  &  ~ (A=k3_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k5_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k7_complex1))) ) ) ) ) ) ) ) ) ).
- fof(t19_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  ~ ( (k1_polyeq_3(A)=B &  (r1_xxreal_0(k6_numbers, k4_complex1(B)) &  ( ~ (A=k3_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k5_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k7_complex1)))  &  ~ (A=k3_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k5_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k7_complex1))) ) ) ) ) ) ) ) ) ).
- fof(d3_polyeq_3, axiom,  (! [A] :  (v1_xcmplx_0(A) =>  (! [B] :  (v1_xcmplx_0(B) =>  (! [C] :  (v1_xcmplx_0(C) =>  (! [D] :  (v1_xcmplx_0(D) =>  (! [E] :  (v1_xcmplx_0(E) => k7_polyeq_1(A, B, C, D, E)=k3_binop_2(k3_binop_2(k3_binop_2(k5_binop_2(A, k3_polyeq_3(E)), k5_binop_2(B, k3_square_1(E))), k5_binop_2(C, E)), D)) ) ) ) ) ) ) ) ) ) ).
- fof(t5_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (k3_complex1(k3_polyeq_3(A))=k10_binop_2(k2_newton(k3_complex1(A), 3), k11_binop_2(k11_binop_2(3, k3_complex1(A)), k5_square_1(k4_complex1(A)))) & k4_complex1(k3_polyeq_3(A))=k9_binop_2(k7_binop_2(k2_newton(k4_complex1(A), 3)), k11_binop_2(k11_binop_2(3, k5_square_1(k3_complex1(A))), k4_complex1(A)))) ) ) ).
- fof(dt_k3_polyeq_3, axiom,  (! [A] :  (v1_xcmplx_0(A) => m1_subset_1(k3_polyeq_3(A), k2_numbers)) ) ).
- fof(t21_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  ~ ( (k1_polyeq_3(A)=B &  (k4_complex1(B)=k6_numbers &  ( ~ (r1_xxreal_0(k6_numbers, k3_complex1(B)))  &  ( ~ (A=k5_binop_2(k7_square_1(k7_binop_2(k3_complex1(B))), k7_complex1))  &  ~ (A=k1_binop_2(k5_binop_2(k7_square_1(k7_binop_2(k3_complex1(B))), k7_complex1))) ) ) ) ) ) ) ) ) ) ).
- fof(t58_sin_cos3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k5_binop_2(2, A))=k5_binop_2(k5_binop_2(2, k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, A)), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, A)) & k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k5_binop_2(2, A))=k4_binop_2(k5_binop_2(k5_binop_2(2, k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, A)), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, A)), 1)) ) ) ).
- fof(t62_sin_cos3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  (k3_binop_2(k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k5_binop_2(2, A)), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k5_binop_2(2, B)))=k5_binop_2(k5_binop_2(2, k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k3_binop_2(A, B))), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k4_binop_2(A, B))) & k4_binop_2(k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k5_binop_2(2, A)), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k5_binop_2(2, B)))=k5_binop_2(k5_binop_2(2, k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k3_binop_2(A, B))), k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k4_binop_2(A, B)))) ) ) ) ) ).
- fof(t61_sin_cos3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  (k3_binop_2(k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k5_binop_2(2, A)), k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k5_binop_2(2, B)))=k5_binop_2(k5_binop_2(2, k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k3_binop_2(A, B))), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k4_binop_2(A, B))) & k4_binop_2(k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k5_binop_2(2, A)), k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k5_binop_2(2, B)))=k5_binop_2(k5_binop_2(2, k10_funct_2(k2_numbers, k2_numbers, k3_sin_cos3, k4_binop_2(A, B))), k10_funct_2(k2_numbers, k2_numbers, k4_sin_cos3, k3_binop_2(A, B)))) ) ) ) ) ).
- fof(t100_rvsum_1, axiom,  (! [A] :  (v1_xcmplx_0(A) =>  (! [B] :  (v1_xcmplx_0(B) =>  (! [C] :  (v1_xcmplx_0(C) => k19_rvsum_1(k11_finseq_1(A, B, C))=k5_binop_2(k5_binop_2(A, B), C)) ) ) ) ) ) ).
- fof(t23_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  ~ ( (k1_polyeq_3(A)=B &  ( ~ (A=k3_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k5_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k7_complex1)))  &  ( ~ (A=k3_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k5_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k7_complex1)))  &  ( ~ (A=k3_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k5_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k7_complex1)))  &  ~ (A=k3_binop_2(k7_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k3_complex1(B), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2))), k5_binop_2(k7_square_1(k12_binop_2(k9_binop_2(k7_binop_2(k3_complex1(B)), k7_square_1(k9_binop_2(k5_square_1(k3_complex1(B)), k5_square_1(k4_complex1(B))))), 2)), k7_complex1))) ) ) ) ) ) ) ) ) ) ).
- fof(d1_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) => k1_polyeq_3(A)=k3_binop_2(k10_binop_2(k5_square_1(k3_complex1(A)), k5_square_1(k4_complex1(A))), k5_binop_2(k11_binop_2(2, k11_binop_2(k3_complex1(A), k4_complex1(A))), k7_complex1))) ) ).
- fof(t53_sin_cos3, axiom,  (! [A] :  (m1_subset_1(A, k5_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) => k15_sin_cos(k1_binop_2(k5_binop_2(k5_binop_2(k7_complex1, A), B)))=k2_comseq_3(k4_binop_2(k10_funct_2(k2_numbers, k2_numbers, k2_sin_cos3, B), k5_binop_2(k7_complex1, k10_funct_2(k2_numbers, k2_numbers, k1_sin_cos3, B))), A)) ) ) ) ).
- fof(t52_sin_cos3, axiom,  (! [A] :  (m1_subset_1(A, k5_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) => k15_sin_cos(k5_binop_2(k5_binop_2(k7_complex1, A), B))=k2_comseq_3(k3_binop_2(k10_funct_2(k2_numbers, k2_numbers, k2_sin_cos3, B), k5_binop_2(k7_complex1, k10_funct_2(k2_numbers, k2_numbers, k1_sin_cos3, B))), A)) ) ) ) ).
- fof(t20_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) =>  (! [B] :  (m1_subset_1(B, k2_numbers) =>  ~ ( (k1_polyeq_3(A)=B &  (k4_complex1(B)=k6_numbers &  ( ~ (r1_xxreal_0(k3_complex1(B), k6_numbers))  &  ( ~ (A=k7_square_1(k3_complex1(B)))  &  ~ (A=k7_binop_2(k7_square_1(k3_complex1(B)))) ) ) ) ) ) ) ) ) ) ).
- fof(dt_k1_polyeq_3, axiom,  (! [A] :  (m1_subset_1(A, k2_numbers) => m1_subset_1(k1_polyeq_3(A), k2_numbers)) ) ).
- fof(t81_newton, axiom,  (! [A] :  (v1_xcmplx_0(A) =>  (k1_newton(A, 2)=k3_xcmplx_0(A, A) & k3_square_1(A)=k1_newton(A, 2)) ) ) ).
